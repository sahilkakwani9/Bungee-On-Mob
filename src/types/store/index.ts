import { ChainInfo, TokenInfo } from "../socket";
import { CrossChainRoute, SameChainRoute } from "../socket/route";
export type IConfigStore = {
  supportedChains: null | ChainInfo[];
  sendingChains: null | ChainInfo[];
  receivingChains: null | ChainInfo[];
  selectedSendingChain: ChainInfo | null;
  selectedReceivingChain: ChainInfo | null;
  sendingTokens: null | TokenInfo[];
  receivingTokens: null | TokenInfo[];
  selectedSendingToken: TokenInfo | null;
  selectedReceivingToken: TokenInfo | null;
  tokensLoading: boolean;
  selectedRoute: CrossChainRoute | SameChainRoute | null;
  setSupportedChains: (chains: ChainInfo[]) => void;
  setSendingChains: (chains: ChainInfo[]) => void;
  setReceivingChains: (chains: ChainInfo[]) => void;
  setSelectedSendingChain: (chain: ChainInfo) => void;
  setSelectedReceivingChain: (chain: ChainInfo) => void;
  setSendingTokens: (tokens: TokenInfo[]) => void;
  setReceivingTokens: (tokens: TokenInfo[]) => void;
  setSelectedSendingToken: (chain: TokenInfo) => void;
  setSelectedReceivingToken: (chain: TokenInfo) => void;
  setSelectedRoute: (route: SameChainRoute | CrossChainRoute) => void;
  setTokensLoading: (value: boolean) => void;
};
